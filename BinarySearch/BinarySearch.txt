Lý thuyết và cách cài đặt:
// Binary search O(logn) : các phần tử tăng dần.
// Binary search dùng while
bool BinarySearch(vi a, int n, int x)
{
	int l = 0, r = n - 1;
	while(l <= r)
	{
		int m = (l + r) / 2;
		if(a[m] == x) return true;
		else if(a[m] < x) l = m + 1;
		else r = m - 1;
	}
	return false;
}
// Binary search dùng đệ quy
bool Binary_Search(vi a, int l, int r, int x)
{
	if(l > r) return false;
	int m = (l + r) / 2;
	if(a[m] == x) return true;
	else if(a[m] < x) 
		return Binary_Search(a, m + 1, r, x);
	else 
		return Binary_Search(a, l, m - 1, x);
}

nt main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	int n, x; cin >> n >> x;
	vi v(n);
	for(int &x : v) cin >> x;

	if(BinarySearch(v, n, x))
		cout << "Dung BinarySearch tim duoc x.\n";
	else cout << "Dung BinarySearch khong tim duoc x.\n";

	if(Binary_Search(v, 0, n - 1, x))
		cout << "Dung Binary_Search tim duoc x.\n";
	else cout << "Dung Binary_Search khong tim duoc x.\n";
	if(binary_search(v.begin(), v.begin() + n, x))
		cout << "Ham binary_search của STL tim duoc x.\n";
	else cout << "Ham binary_search củ STL khong tim duoc x.\n";
	return 0;
}